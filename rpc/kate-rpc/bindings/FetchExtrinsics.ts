// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { Error } from "./Types";

export type BlockId = { "Hash": string } | { "Number": number };

export type EncodeSelector = "None" | "Call" | "Extrinsic";

export type ExtrinsicInformation = { encoded: string | null, tx_hash: string, tx_index: number, pallet_id: number, call_id: number, signature: TransactionSignature | null, };

export type Filter = { transaction: TransactionFilterOptions | null, signature: SignatureFilterOptions | null, };

export type Options = { filter: Filter | null, encode_selector: EncodeSelector | null, };

export type RpcRequest = { id: number, jsonrpc: string, method: string, params: [BlockId, Options | null], };

export type RpcResponse = { jsonrpc: string, result: Array<ExtrinsicInformation> | null, error: Error | null, id: number, };

export type SignatureFilterOptions = { ss58_address: string | null, app_id: number | null, nonce: number | null, };

export type TransactionFilterOptions = "All" | { "TxHash": Array<string> } | { "TxIndex": Array<number> } | { "Pallet": Array<number> } | { "PalletCall": Array<[number, number]> };

export type TransactionSignature = { ss58_address: string | null, nonce: number, app_id: number, mortality: [bigint, bigint] | null, };
