// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { Error } from "./Types";

export type Filter = "All" | "OnlyExtrinsics" | "OnlyNonExtrinsics" | { "Only": Array<number> };

export type GroupedRuntimeEvents = { phase: Phase, events: Array<RuntimeEvent>, };

export type Options = { filter: Filter | null, enable_encoding: boolean | null, enable_decoding: boolean | null, };

/**
 * A phase of a block's execution.
 */
export type Phase = { "ApplyExtrinsic": number } | "Finalization" | "Initialization";

export type RpcRequest = { id: number, jsonrpc: string, method: string, params: [string, Options | null], };

export type RpcResponse = { jsonrpc: string, result: Array<GroupedRuntimeEvents> | null, error: Error | null, id: number, };

export type RuntimeEvent = { index: number, emitted_index: [number, number], encoded: string | null, decoded: string | null, };
