[package]
name = "avail-node"
version = "0.1.0"
description = "Avail Node"
license = "GNU GPLv3"
publish = false
build = "build.rs"
authors.workspace = true
edition.workspace = true
homepage.workspace = true
repository.workspace = true
default-run = "avail-node"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[[bin]]
name = "avail-node"

[dependencies]
# Internals
avail-base.workspace = true
avail-core = { workspace = true, features = ["std"] }
kate.workspace = true
da-runtime.workspace = true
da-control.workspace = true
kate-rpc.workspace = true
testing-rpc.workspace = true
pallet-vector.workspace = true
frame-system-rpc-runtime-api.workspace = true
frame-system = { workspace = true, default-features = false }
sc-basic-authorship.workspace = true

# 3rd-party
codec = { workspace = true }
clap = { workspace = true, optional = true }
clap-num = { workspace = true, optional = true }
jsonrpsee.workspace = true
futures.workspace = true
serde.workspace = true
serde_json = { workspace = true, features = ["arbitrary_precision"] }
async-trait.workspace = true

# Substrate
## Primitives
sc-cli = { workspace = true, default-features = false }
sp-io = { workspace = true, default-features = false }
sp-core = { workspace = true, default-features = false }
sc-executor = { workspace = true, default-features = false }
sc-service = { workspace = true, default-features = false }
sc-storage-monitor = { workspace = true, default-features = false }
sc-telemetry = { workspace = true, default-features = false }
sc-keystore = { workspace = true, default-features = false }
sp-keystore = { workspace = true, default-features = false }
sp-keyring = { workspace = true, default-features = false }
sc-transaction-pool = { workspace = true, default-features = false }
sp-inherents = { workspace = true, default-features = false }
sc-transaction-pool-api = { workspace = true, default-features = false }
sp-transaction-storage-proof = { workspace = true, default-features = false }
sc-consensus-babe-rpc = { workspace = true, default-features = false }
sp-consensus-babe = { workspace = true, default-features = false }
sp-consensus = { workspace = true, default-features = false }
sc-consensus = { workspace = true, default-features = false }
sc-offchain = { workspace = true, default-features = false }
sc-consensus-grandpa-rpc = { workspace = true, default-features = false }
sc-consensus-grandpa = { workspace = true, default-features = false }
sp-consensus-grandpa = { workspace = true, default-features = false }
sc-client-api = { workspace = true, default-features = false }
sp-runtime = { workspace = true, default-features = false }
sp-timestamp = { workspace = true, default-features = false }
sc-consensus-babe = { workspace = true, default-features = false }
sc-consensus-slots = { workspace = true, default-features = false }
sc-network = { workspace = true, default-features = false }
sp-authority-discovery = { workspace = true, default-features = false }
sc-authority-discovery = { workspace = true, default-features = false }
sc-chain-spec = { workspace = true, default-features = false }
sp-blockchain = { workspace = true, default-features = false }
sp-block-builder = { workspace = true, default-features = false }
sc-sync-state-rpc = { workspace = true, default-features = false }
sp-api = { workspace = true, default-features = false }
sc-sysinfo = { workspace = true, default-features = false }
sc-network-sync = { workspace = true, default-features = false }

# FRAME
pallet-im-online = { workspace = true, default-features = false }
pallet-transaction-payment = { workspace = true, default-features = false }
mmr-rpc = { workspace = true, default-features = false }

# These dependencies are used for the node template's RPCs
sc-rpc = { workspace = true, default-features = false }
sc-rpc-api = { workspace = true, default-features = false }
sc-rpc-spec-v2 = { workspace = true, default-features = false }
substrate-frame-rpc-system = { workspace = true, default-features = false }
pallet-transaction-payment-rpc = { workspace = true, default-features = false }
substrate-state-trie-migration-rpc = { workspace = true, default-features = false }
substrate-prometheus-endpoint.workspace = true

# These dependencies are used for runtime benchmarking
frame-benchmarking = { workspace = true, default-features = false }
frame-benchmarking-cli = { workspace = true, default-features = false }

# Try-runtime
try-runtime-cli = { workspace = true, default-features = false, optional = true }

[build-dependencies]
substrate-build-script-utils = { workspace = true, default-features = false }
clap = { workspace = true, optional = true }
clap_complete = { workspace = true, optional = true }
frame-benchmarking-cli = { workspace = true, optional = true }

[dev-dependencies]
sp-tracing = { workspace = true, default-features = false }
tempfile.workspace = true

[features]
default = [ "cli" ]
header_commitment_corruption = [ "da-runtime/header_commitment_corruption" ]
fast-runtime = [ "da-runtime/fast-runtime" ]
testing-environment = [ "da-runtime/testing-environment" ]
cli = [ "clap", "clap-num", "clap_complete", "frame-benchmarking-cli" ]
runtime-benchmarks = [
	"da-control/runtime-benchmarks",
	"da-runtime/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
]
# Enable features that allow the runtime to be tried and debugged. Name might be subject to change
# in the near future.
try-runtime = [
	"avail-core/try-runtime",
	"da-control/try-runtime",
	"da-runtime/try-runtime",
	"frame-system/try-runtime",
	"try-runtime-cli/try-runtime",
]
