[package]
name = "avail-node"
version = "0.1.0"
description = "Avail Node"
authors = ["Avail Team"]
homepage = "https://www.availproject.org/"
edition = "2021"
license = "GNU GPLv3"
publish = false
repository = "https://github.com/availproject/avail"
build = "build.rs"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[[bin]]
name = "avail-node"

[dependencies]
avail-base = { path = "../base" }

# Internals
avail-core = { workspace = true, features = ["std"] }
kate = { workspace = true }
da-runtime = { path = "../runtime" }
da-control = { path = "../pallets/dactr" }
kate-rpc = { path = "../rpc/kate-rpc" }

# 3rd-party
codec = { package = "parity-scale-codec", version = "3" }
clap = { version = "4.4.17", features = ["derive"], optional = true }
clap-num = { version = "1.1.1", optional = true }
jsonrpsee = { version = "0.20.3", features = ["server"] }
futures = "0.3.21"
serde = { version = "1.0.195", features = ["derive"] }
serde_json = { version = "1.0", features = ["arbitrary_precision"] }
lru = "0.7.2"
log = "0.4.17"
rand = "0.8"
hex-literal = "0.3.4"
derive_more = "0.99.17"
async-trait = "0.1.60"

# Substrate
## Primitives
sc-cli = { workspace = true, default-features = false }
sp-io = { workspace = true, default-features = false }
sp-statement-store = { workspace = true, default-features = false }
sp-core = { workspace = true, default-features = false }
sc-executor = { workspace = true, default-features = false }
sc-service = { workspace = true, default-features = false }
sc-storage-monitor = { workspace = true, default-features = false }
sc-telemetry = { workspace = true, default-features = false }
sc-keystore = { workspace = true, default-features = false }
sp-keystore = { workspace = true, default-features = false }
sp-keyring = { workspace = true, default-features = false }
sc-transaction-pool = { workspace = true, default-features = false }
sp-transaction-pool = { workspace = true, default-features = false }
sp-inherents = { workspace = true, default-features = false }
sc-transaction-pool-api = { workspace = true, default-features = false }
sp-transaction-storage-proof = { workspace = true, default-features = false }
sc-consensus-babe-rpc = { workspace = true, default-features = false }
sp-consensus-babe = { workspace = true, default-features = false }
sp-consensus = { workspace = true, default-features = false }
sc-consensus = { workspace = true, default-features = false }
sc-offchain = { workspace = true, default-features = false }
sc-consensus-grandpa-rpc = { workspace = true, default-features = false }
sc-consensus-grandpa = { workspace = true, default-features = false }
sp-consensus-grandpa = { workspace = true, default-features = false }
sc-client-api = { workspace = true, default-features = false }
sp-runtime = { workspace = true, default-features = false }
sp-timestamp = { workspace = true, default-features = false }
sc-consensus-babe = { workspace = true, default-features = false }
sc-consensus-slots = { workspace = true, default-features = false }
sc-network = { workspace = true, default-features = false }
sp-authority-discovery = { workspace = true, default-features = false }
sc-authority-discovery = { workspace = true, default-features = false }
sc-chain-spec = { workspace = true, default-features = false }
sc-client-db = { workspace = true, default-features = false }
sp-blockchain = { workspace = true, default-features = false }
sp-block-builder = { workspace = true, default-features = false }
sc-basic-authorship = { workspace = true, default-features = false }
sc-sync-state-rpc = { workspace = true, default-features = false }
sp-api = { workspace = true, default-features = false }
sc-sysinfo = { workspace = true, default-features = false }
sc-network-common = { workspace = true, default-features = false }
sc-network-sync = { workspace = true, default-features = false }
primitive-types = "0.12.0"

# FRAME
pallet-im-online = { workspace = true, default-features = false }
frame-system = { path = "../pallets/system", default-features = false }
pallet-transaction-payment = { workspace = true, default-features = false }
frame-support = { workspace = true, default-features = false }
mmr-rpc = { workspace = true, default-features = false }

# These dependencies are used for the node template's RPCs
sc-rpc = { workspace = true, default-features = false }
sp-rpc = { workspace = true, default-features = false }
sc-rpc-api = { workspace = true, default-features = false }
sc-rpc-spec-v2 = { workspace = true, default-features = false }
substrate-frame-rpc-system = { workspace = true, default-features = false }
pallet-transaction-payment-rpc = { workspace = true, default-features = false }
substrate-state-trie-migration-rpc = { workspace = true, default-features = false }
substrate-prometheus-endpoint = "0.10.0-dev"

# These dependencies are used for runtime benchmarking
frame-benchmarking = { workspace = true, default-features = false }
frame-benchmarking-cli = { workspace = true, default-features = false }

# Try-runtime
try-runtime-cli = { workspace = true, default-features = false, optional = true }

# Custom
frame-system-rpc-runtime-api = { path = "../pallets/system/rpc/runtime-api" }
pallet-vector = { path = "../pallets/vector" }

[build-dependencies]
substrate-build-script-utils = { workspace = true, default-features = false }
clap = { version = "4.4.17", optional = true }
clap_complete = { version = "4.0.2", optional = true }
frame-benchmarking-cli = { workspace = true, optional = true }

[dev-dependencies]
sp-tracing = { workspace = true, default-features = false }
tempfile = "3.1.0"

[features]
default = [ "cli" ]
header_commitment_corruption = [ "da-runtime/header_commitment_corruption" ]
fast-runtime = [ "da-runtime/fast-runtime" ]
cli = [ "clap", "clap-num", "clap_complete", "frame-benchmarking-cli" ]
runtime-benchmarks = [
	"da-control/runtime-benchmarks",
	"da-runtime/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
]
# Enable features that allow the runtime to be tried and debugged. Name might be subject to change
# in the near future.
try-runtime = [
	"avail-core/try-runtime",
	"da-control/try-runtime",
	"da-runtime/try-runtime",
	"frame-system/try-runtime",
	"try-runtime-cli/try-runtime",
]
