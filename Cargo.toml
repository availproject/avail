[workspace]
resolver = "2"
members = [
    "pallets/executive",
    "pallets/system",
    "pallets/dactr",
    "pallets/bridges/nomad/updater-manager",
    "pallets/bridges/nomad/home",
    "pallets/bridges/nomad/da-bridge",
    "runtime",
    "node",
]


[patch."https://github.com/availproject/substrate.git"]
frame-executive = { path = "pallets/executive" }
frame-system = { path = "pallets/system" }
frame-system-benchmarking = { path = "pallets/system/benchmarking" }
frame-system-rpc-runtime-api = { path = "pallets/system/rpc/runtime-api" }
pallet-nomination-pools = { path = "pallets/nomination-pools" }
pallet-nomination-pools-runtime-api = { path = "pallets/nomination-pools/runtime-api" }

[patch.crates-io]
# Customized Local pallets

# Other stuff
uint = { git = "https://github.com/paritytech/parity-common.git", tag = "uint-v0.9.5" }
rlp = { git = "https://github.com/paritytech/parity-common.git", tag = "rlp-v0.5.2" }

## CLI


# The list of dependencies below (which can be both direct and indirect dependencies) are crates
# that are suspected to be CPU-intensive, and that are unlikely to require debugging (as some of
# their debug info might be missing) or to require to be frequently recompiled. We compile these
# dependencies with `opt-level=3` even in "dev" mode in order to make "dev" mode more usable.
# The majority of these crates are cryptographic libraries.
#
# Note that this does **not** affect crates that depend on Substrate. In other words, if you add
# a dependency on Substrate, you have to copy-paste this list in your own `Cargo.toml` (assuming
# that you want the same list). This list is only relevant when running `cargo build` from within
# the Substrate workspace.
#
# If you see an error mentioning "profile package spec ... did not match any packages", it
# probably concerns this list.
#
# This list is ordered alphabetically.
[profile.dev.package]
blake2 = { opt-level = 3 }
blake2b_simd = { opt-level = 3 }
chacha20poly1305 = { opt-level = 3 }
cranelift-codegen = { opt-level = 3 }
cranelift-wasm = { opt-level = 3 }
crc32fast = { opt-level = 3 }
crossbeam-deque = { opt-level = 3 }
# crossbeam-queue = { opt-level = 3 }
crypto-mac = { opt-level = 3 }
curve25519-dalek = { opt-level = 3 }
ed25519-dalek = { opt-level = 3 }
flate2 = { opt-level = 3 }
futures-channel = { opt-level = 3 }
hashbrown = { opt-level = 3 }
h2 = { opt-level = 3 }
hash-db = { opt-level = 3 }
hmac = { opt-level = 3 }
httparse = { opt-level = 3 }
integer-sqrt = { opt-level = 3 }
keccak = { opt-level = 3 }
librocksdb-sys = { opt-level = 3 }
libsecp256k1 = { opt-level = 3 }
libz-sys = { opt-level = 3 }
mio = { opt-level = 3 }
nalgebra = { opt-level = 3 }
num-bigint = { opt-level = 3 }
parking_lot = { opt-level = 3 }
parking_lot_core = { opt-level = 3 }
percent-encoding = { opt-level = 3 }
primitive-types = { opt-level = 3 }
ring = { opt-level = 3 }
rustls = { opt-level = 3 }
sha2 = { opt-level = 3 }
sha3 = { opt-level = 3 }
smallvec = { opt-level = 3 }
snow = { opt-level = 3 }
twox-hash = { opt-level = 3 }
x25519-dalek = { opt-level = 3 }
yamux = { opt-level = 3 }
zeroize = { opt-level = 3 }

[profile.release]
# Substrate runtime requires unwinding.
panic = "unwind"
