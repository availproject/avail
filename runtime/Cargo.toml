[package]
name = "da-runtime"
version = "7.0.1"
authors = ["Avail Team"]
description = "Avail Runtime"
edition = "2021"
build = "build.rs"
license = "GNU GPLv3"
homepage = "https://www.availproject.org/"
repository = "https://github.com/availproject/avail"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
# Internal
avail-core = { workspace = true, default-features = false }
da-control = { path = "../pallets/dactr", default-features = false }
kate = { workspace = true, default-features = false }

# External 
static_assertions = "1.1.0"
serde = { version = "1.0.195", optional = true, features = ["derive"] }
log = { version = "0.4.20", default-features = false }
hex-literal = { version = "0.3.4" }

# Substrate
scale-info = { version = "2.5.0", default-features = false, features = ["derive"] }
parity-util-mem = { version = "0.12.0", default-features = false, features = ["primitive-types"] }
codec = { package = "parity-scale-codec", version = "3", default-features = false, features = ["derive"] }

## primitives
sp-consensus-grandpa = { workspace = true, default-features = false }
sp-io = { workspace = true, default-features = false }
sp-core = { workspace = true, default-features = false }
sp-api = { workspace = true, default-features = false }
sp-runtime = { workspace = true, default-features = false }
sp-authority-discovery = { workspace = true, default-features = false }
sp-version = { workspace = true, default-features = false }
sp-consensus-babe = { workspace = true, default-features = false }
sp-genesis-builder = { workspace = true, default-features = false }
sp-staking = { workspace = true, default-features = false }
sp-transaction-pool = { workspace = true, default-features = false }
sp-offchain = { workspace = true, default-features = false }
sp-session = { workspace = true, default-features = false }
sp-block-builder = { workspace = true, default-features = false }
sp-inherents = { workspace = true, default-features = false }
sp-npos-elections = { workspace = true, default-features = false }
sp-std = { workspace = true, default-features = false }
sp-storage = { workspace = true, default-features = false }

## frame dependencies
frame-support = { workspace = true, default-features = false }
frame-system = { path = "../pallets/system", default-features = false, features = ["serde"] }
frame-executive = { path = "../pallets/executive", default-features = false }
frame-try-runtime = { workspace = true, default-features = false, optional = true }

pallet-balances = { workspace = true, default-features = false }
pallet-session = { workspace = true, default-features = false, features = ['historical'] }
pallet-im-online = { workspace = true, default-features = false }
pallet-grandpa = { workspace = true, default-features = false }
pallet-timestamp = { workspace = true, default-features = false }
pallet-transaction-payment = { workspace = true, default-features = false }
pallet-staking = { workspace = true, default-features = false }
pallet-staking-reward-curve = { workspace = true, default-features = false }
pallet-utility = { workspace = true, default-features = false }
pallet-scheduler = { workspace = true, default-features = false }
pallet-babe = { workspace = true, default-features = false }
pallet-authorship = { workspace = true, default-features = false }
pallet-indices = { workspace = true, default-features = false }
pallet-offences = { workspace = true, default-features = false }
pallet-treasury = { workspace = true, default-features = false }
pallet-collective = { workspace = true, default-features = false }
pallet-bounties = { workspace = true, default-features = false }
pallet-sudo = { workspace = true, default-features = false }
pallet-authority-discovery = { workspace = true, default-features = false }
pallet-elections-phragmen = { workspace = true, default-features = false }
pallet-tips = { workspace = true, default-features = false }
pallet-membership = { workspace = true, default-features = false }
pallet-bags-list = { workspace = true, default-features = false }
pallet-election-provider-multi-phase = { workspace = true, default-features = false }
frame-election-provider-support = { workspace = true, default-features = false }
pallet-democracy = { workspace = true, default-features = false }
pallet-mmr = { workspace = true, default-features = false }
pallet-multisig = { workspace = true, default-features = false }
pallet-child-bounties = { workspace = true, default-features = false }
pallet-preimage = { workspace = true, default-features = false }
pallet-nomination-pools = { workspace = true, default-features = false }
pallet-nomination-pools-runtime-api = { workspace = true, default-features = false }
pallet-identity = { workspace = true, default-features = false }
pallet-proxy = { workspace = true, default-features = false }
pallet-tx-pause = { workspace = true, default-features = false }

pallet-mandate = { path = "../pallets/mandate", default-features = false }
pallet-vector = { path = "../pallets/vector", default-features = false }

## RPCs
pallet-transaction-payment-rpc-runtime-api = { path = "../pallets/transaction-payment/rpc/runtime-api", default-features = false }
frame-system-rpc-runtime-api = { path = "../pallets/system/rpc/runtime-api" , default-features = false }

## benchmarking
frame-benchmarking = { workspace = true, default-features = false, optional = true }
frame-system-benchmarking = { path = "../pallets/system/benchmarking", default-features = false, optional = true }

[build-dependencies]
substrate-wasm-builder = { workspace = true, default-features = false }

[dev-dependencies]
test-case = "1.2.3"
hex = "0.4"
hex-literal = "0.3.4"
serde_json = "1.0"
sp-keyring = { workspace = true, default-features = false }
env_logger = "0.9.1"
pallet-staking-reward-fn = { workspace = true, default-features = false }
iai = "0.1.1"
iai-callgrind = { version = "0.7.3" }
criterion = "0.5.1"
codspeed-criterion-compat = "2.2.0"
divan = "0.1.11"

[[bench]]
name = "header_kate_commitment_iai_callgrind"
harness = false

[[bench]]
name = "header_kate_commitment_iai"
harness = false

[[bench]]
name = "header_kate_commitment_cri"
harness = false

[[bench]]
name = "header_kate_commitment_divan"
harness = false

[features]
default = [ "std" ]
with-tracing = [ "frame-executive/with-tracing" ]
fast-runtime = []
codspeed = []
header_commitment_corruption = [ "frame-system/header_commitment_corruption" ]
std = [
	"avail-core/std",
	"codec/std",
	"da-control/std",
	"frame-benchmarking?/std",
	"frame-election-provider-support/std",
	"frame-executive/std",
	"frame-support/std",
	"frame-system-benchmarking?/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system/std",
	"frame-try-runtime?/std",
	"kate/std",
	"log/std",
	"pallet-authority-discovery/std",
	"pallet-authorship/std",
	"pallet-babe/std",
	"pallet-bags-list/std",
	"pallet-balances/std",
	"pallet-bounties/std",
	"pallet-child-bounties/std",
	"pallet-collective/std",
	"pallet-democracy/std",
	"pallet-election-provider-multi-phase/std",
	"pallet-elections-phragmen/std",
	"pallet-grandpa/std",
	"pallet-identity/std",
	"pallet-im-online/std",
	"pallet-indices/std",
	"pallet-mandate/std",
	"pallet-membership/std",
	"pallet-mmr/std",
	"pallet-multisig/std",
	"pallet-nomination-pools-runtime-api/std",
	"pallet-nomination-pools/std",
	"pallet-offences/std",
	"pallet-preimage/std",
	"pallet-proxy/std",
	"pallet-scheduler/std",
	"pallet-session/std",
	"pallet-staking/std",
	"pallet-sudo/std",
	"pallet-timestamp/std",
	"pallet-tips/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-transaction-payment/std",
	"pallet-treasury/std",
	"pallet-tx-pause/std",
	"pallet-utility/std",
	"pallet-vector/std",
	"scale-info/std",
	"serde",
	"sp-api/std",
	"sp-authority-discovery/std",
	"sp-block-builder/std",
	"sp-consensus-babe/std",
	"sp-consensus-grandpa/std",
	"sp-core/std",
	"sp-genesis-builder/std",
	"sp-inherents/std",
	"sp-io/std",
	"sp-npos-elections/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-staking/std",
	"sp-std/std",
	"sp-transaction-pool/std",
	"sp-version/std",
]

runtime-benchmarks = [
	"da-control/runtime-benchmarks",
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-babe/runtime-benchmarks",
	"pallet-bags-list/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-bounties/runtime-benchmarks",
	"pallet-child-bounties/runtime-benchmarks",
	"pallet-collective/runtime-benchmarks",
	"pallet-democracy/runtime-benchmarks",
	"pallet-election-provider-multi-phase/runtime-benchmarks",
	"pallet-elections-phragmen/runtime-benchmarks",
	"pallet-grandpa/runtime-benchmarks",
	"pallet-identity/runtime-benchmarks",
	"pallet-im-online/runtime-benchmarks",
	"pallet-indices/runtime-benchmarks",
	"pallet-mandate/runtime-benchmarks",
	"pallet-membership/runtime-benchmarks",
	"pallet-mmr/runtime-benchmarks",
	"pallet-multisig/runtime-benchmarks",
	"pallet-preimage/runtime-benchmarks",
	"pallet-proxy/runtime-benchmarks",
	"pallet-scheduler/runtime-benchmarks",
	"pallet-staking/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"pallet-tips/runtime-benchmarks",
	"pallet-treasury/runtime-benchmarks",
	"pallet-tx-pause/runtime-benchmarks",
	"pallet-utility/runtime-benchmarks",
	"pallet-vector/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
]

try-runtime = [
	"avail-core/try-runtime",
	"da-control/try-runtime",
	"frame-executive/try-runtime",
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"frame-try-runtime/try-runtime",
	"pallet-authority-discovery/try-runtime",
	"pallet-authorship/try-runtime",
	"pallet-babe/try-runtime",
	"pallet-bags-list/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-bounties/try-runtime",
	"pallet-collective/try-runtime",
	"pallet-democracy/try-runtime",
	"pallet-election-provider-multi-phase/try-runtime",
	"pallet-elections-phragmen/try-runtime",
	"pallet-grandpa/try-runtime",
	"pallet-identity/try-runtime",
	"pallet-im-online/try-runtime",
	"pallet-indices/try-runtime",
	"pallet-mandate/try-runtime",
	"pallet-membership/try-runtime",
	"pallet-mmr/try-runtime",
	"pallet-multisig/try-runtime",
	"pallet-nomination-pools/try-runtime",
	"pallet-offences/try-runtime",
	"pallet-preimage/try-runtime",
	"pallet-proxy/try-runtime",
	"pallet-scheduler/try-runtime",
	"pallet-session/try-runtime",
	"pallet-staking/try-runtime",
	"pallet-sudo/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-tips/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"pallet-treasury/try-runtime",
	"pallet-tx-pause/try-runtime",
	"pallet-utility/try-runtime",
	"pallet-vector/try-runtime",
	"sp-runtime/try-runtime",
]
