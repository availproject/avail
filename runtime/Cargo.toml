[package]
name = "da-runtime"
version = "6.0.0"
authors = ["Anonymous"]
description = "Polygon Data Avilability Runtime"
edition = "2021"
build = "build.rs"
license = "GNU GPLv3"
homepage = "https://polygon.technology/"
repository = "https://github.com/maticnetwork/avail/"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]

# Internal
da-primitives = { version = "0.4", default-features = false }
kate = { version = "0.5" , default-features = false }
da-control = { path = "../pallets/dactr", default-features = false }
kate-rpc-runtime-api = { path = "../rpc/kate-rpc-runtime-api", default-features = false }

## Nomad
nomad-updater-manager = { path = "../pallets/nomad/updater-manager", default-features = false }
nomad-home = { path = "../pallets/nomad/home", default-features = false }
da-bridge = { path = "../pallets/nomad/da-bridge", default-features = false }

# External 
static_assertions = "1.1.0"
serde = { version = "1.0.121", optional = true, features = ["derive"] }
log = { version = "0.4.14", default-features = false }
hex-literal = { version = "0.3.4", optional = true }

# Substrate
scale-info = { version = "2.1.1", default-features = false, features = ["derive"] }
parity-util-mem = { version = "0.12.0", default-features = false, features = ["primitive-types"] }
codec = { package = "parity-scale-codec", version = "3", default-features = false, features = ["derive"] }

## primitives
sp-io = { version = "6.0.0", default-features = false }
sp-core = { version = "6.0.0", default-features = false }
sp-std = { version = "4.0.0", default-features = false }
sp-api = { version = "4.0.0-dev", default-features = false }
sp-runtime = { version = "6.0.0", default-features = false }
sp-authority-discovery = { version = "4.0.0-dev", default-features = false }
sp-version = { version = "5", default-features = false }
sp-consensus-babe = { version = "0.10.0-dev", default-features = false }
sp-staking = {version = "4.0.0-dev", default-features = false }
sp-transaction-pool = { version = "4.0.0-dev", default-features = false }
sp-offchain = { version = "4.0.0-dev", default-features = false }
sp-session = { version = "4.0.0-dev", default-features = false }
sp-block-builder = { version = "4.0.0-dev", default-features = false }
sp-inherents = { version = "4.0.0-dev", default-features = false }
sp-npos-elections = { version = "4.0.0-dev", default-features = false }

## frame dependencies
frame-support = { version = "4.0.0-dev", default-features = false }
frame-system = { path = "../pallets/system", default-features = false }
frame-executive = { version = "4.0.0-dev", default-features = false }
frame-try-runtime = { version = "0.10.0-dev", default-features = false, optional = true }

pallet-balances = { version = "4.0.0-dev", default-features = false }
pallet-session = { version = "4.0.0-dev", features = ['historical'], default-features = false }
pallet-im-online = { version = "4.0.0-dev", default-features = false }
pallet-grandpa = { version = "4.0.0-dev", default-features = false }
pallet-timestamp = { version = "4.0.0-dev", default-features = false }
pallet-transaction-payment = { version = "4.0.0-dev", default-features = false }
pallet-staking = { version = "4.0.0-dev", default-features = false }
pallet-staking-reward-curve = { version = "4.0.0-dev", default-features = false }
pallet-utility = { version = "4.0.0-dev", default-features = false }
pallet-scheduler = { version = "4.0.0-dev", default-features = false }
pallet-babe = { version = "4.0.0-dev", default-features = false }
pallet-authorship = { version = "4.0.0-dev", default-features = false }
pallet-indices = { version = "4.0.0-dev", default-features = false }
pallet-offences = { version = "4.0.0-dev", default-features = false }
pallet-treasury = { version = "4.0.0-dev", default-features = false }
pallet-collective = { version = "4.0.0-dev", default-features = false }
pallet-bounties = { version = "4.0.0-dev", default-features = false }
pallet-sudo = { version = "4.0.0-dev", default-features = false }
pallet-authority-discovery = { version = "4.0.0-dev", default-features = false }
pallet-elections-phragmen = { version = "5.0.0-dev", default-features = false }
pallet-tips = { version = "4.0.0-dev", default-features = false }
pallet-membership = { version = "4.0.0-dev", default-features = false }
pallet-randomness-collective-flip = { version = "4.0.0-dev", default-features = false }
pallet-bags-list = { version = "4.0.0-dev", default-features = false }
pallet-election-provider-multi-phase = { version = "4.0.0-dev", default-features = false }
frame-election-provider-support = { version = "4.0.0-dev", default-features = false }
pallet-democracy = { version = "4.0.0-dev", default-features = false }
pallet-asset-tx-payment = { version = "4.0.0-dev", default-features = false }
pallet-mmr = { version = "4.0.0-dev", default-features = false }
pallet-multisig = { version = "4.0.0-dev", default-features = false }
pallet-child-bounties = { version = "4.0.0-dev", default-features = false }
pallet-preimage = { version = "4.0.0-dev", default-features = false }
pallet-nomination-pools = { version = "1", default-features = false }

## RPCs
pallet-transaction-payment-rpc-runtime-api = { version = "4.0.0-dev", default-features = false }
frame-system-rpc-runtime-api = { version = "4.0.0-dev", default-features = false }

## benchmarking
frame-benchmarking = { version = "4.0.0-dev", default-features = false, optional = true }
frame-system-benchmarking = { path = "../pallets/system/benchmarking", default-features = false, optional = true }
#pallet-session-benchmarking = { version = "4.0.0-dev", default-features = false, optional = true }
#pallet-offences-benchmarking = { version = "4.0.0-dev", default-features = false, optional = true }
#pallet-election-provider-support-benchmarking = { version = "4.0.0-dev", default-features = false, optional = true }

[build-dependencies]
substrate-wasm-builder = "4.0.0"

[dev-dependencies]
test-case = "1.2.3"
hex = "0.4"
hex-literal = "0.3.4"
serde_json = "1.0"
sp-keyring = "6.0.0"
env_logger = "0.9.1"

[features]
default = ["std"]
std = [
	"serde",
	"parity-util-mem/std",
	"log/std",
	"da-primitives/std",
	"sp-io/std", 
	"sp-core/std", 
	"sp-std/std",
	"sp-api/std",
	"sp-runtime/std",
	"sp-version/std", 
	"sp-authority-discovery/std",
	"sp-consensus-babe/std",
	"sp-staking/std",
	"sp-transaction-pool/std",
	"sp-offchain/std", 
	"sp-session/std",
	"sp-block-builder/std",
	"sp-inherents/std",
	"sp-npos-elections/std",
	"frame-executive/std",
	"kate/std",
	"kate-rpc-runtime-api/std",
	"frame-support/std",
	"frame-system/std",
	#"pallet-election-provider-support-benchmarking?/std",
	"pallet-session/std",
	#"pallet-session-benchmarking?/std", 
	"pallet-balances/std",
	"pallet-im-online/std",
	"pallet-grandpa/std",
	"pallet-timestamp/std",
	"pallet-transaction-payment/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-staking/std",
	"pallet-utility/std",
	"pallet-scheduler/std",
	"pallet-babe/std",
	"pallet-authorship/std",
	"pallet-indices/std",
	"pallet-offences/std",
	#"pallet-offences-benchmarking?/std",
	"pallet-treasury/std",
	"pallet-collective/std",
	"pallet-bounties/std",
	"pallet-sudo/std",
	"pallet-authority-discovery/std",
	"pallet-elections-phragmen/std",
	"pallet-tips/std",
	"pallet-membership/std",
	"pallet-randomness-collective-flip/std",
	"pallet-democracy/std",
	"pallet-asset-tx-payment/std",
	"pallet-mmr/std",
	"pallet-multisig/std",
	"pallet-child-bounties/std",
	"pallet-preimage/std",
	"pallet-nomination-pools/std",
	"frame-system-rpc-runtime-api/std",
	"frame-try-runtime?/std",
	"da-control/std",
	"nomad-updater-manager/std",
	"nomad-home/std",
	"da-bridge/std",
]

runtime-benchmarks = [
	"frame-benchmarking",
	"frame-system/runtime-benchmarks",
	"da-control/runtime-benchmarks",
	"nomad-home/runtime-benchmarks",
	"da-bridge/runtime-benchmarks",
	"pallet-collective/runtime-benchmarks",
	#"pallet-session-benchmarking/runtime-benchmarks",
	#"pallet-offences-benchmarking/runtime-benchmarks",
	#"pallet-election-provider-support-benchmarking/runtime-benchmarks",
	"frame-system-benchmarking",
	"hex-literal",
]

try-runtime = [
	"frame-try-runtime/try-runtime",
	"frame-executive/try-runtime",
	"frame-system/try-runtime",
	"frame-support/try-runtime",

]
