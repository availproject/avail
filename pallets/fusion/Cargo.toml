[package]
name = "pallet-fusion"
version = "1.0.0"
edition = "2021"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
frame-system = { workspace = true, default-features = false }
hex-literal = { workspace = true }
log.workspace = true

# Substrate
codec = { workspace = true, default-features = false, features = ["derive"] }
scale-info = { workspace = true, default-features = false }
frame-support = { workspace = true, default-features = false }
sp-core = { workspace = true, default-features = false }
sp-io = { workspace = true, default-features = false }
sp-runtime = { workspace = true, default-features = false }
sp-std = { workspace = true, default-features = false }
sp-staking = { workspace = true, default-features = false, features = ["serde"] }
pallet-balances = { workspace = true, default-features = false }
pallet-staking = { workspace = true, default-features = false }
pallet-staking-reward-curve = { workspace = true, default-features = false }
frame-election-provider-support = { workspace = true, default-features = false }
pallet-timestamp = { workspace = true, default-features = false }
pallet-session = { workspace = true, default-features = false }
pallet-authorship = { workspace = true, default-features = false }

# Benchmarking
frame-benchmarking = { workspace = true, default-features = false, optional = true }

[dev-dependencies]
sp-core = { workspace = true, default-features = false }
avail-core = { workspace = true, default-features = false }
hex = "0.4"

[features]
default = [ "std" ]
std = [
	"codec/std",
	"frame-benchmarking?/std",
	"frame-support/std",
	"frame-system/std",
	"pallet-balances/std",
	"scale-info/std",
	"sp-core/std",
	"sp-io/std",
	"sp-runtime/std",
	"sp-staking/std",
	"sp-std/std",
]
runtime-benchmarks = [
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
]
try-runtime = [
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"sp-runtime/try-runtime",
]
