name: Polygon Avail CI
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  pre:
    steps:
      - uses: actions/checkout@v2

        # A repository can have up to 10GB of caches.
        # Check https://github.com/actions/cache for details.
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.x'

      - name: Install nightly `rust-fmt` 
        uses: actions-rs/toolchain@v1
        with:
            # NOTE: Until https://github.com/actions-rs/toolchain/pull/209 is merged,
            # this should be synced with rust-toolchain.toml file.
            # After merge, this section should be removed.
            toolchain: nightly-2022-11-25
            components: rustfmt
            profile: minimal

      - name: Install Rust toolchain 1.64 
        uses: actions-rs/toolchain@v1
        with:
            toolchain: 1.64
            components: clippy, llvm-tools-preview
            default: true
            profile: minimal

  lint:
    runs-on: ubuntu-latest
    needs: [pre]
    steps:
      - name: Check code formatting
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly-2022-11-25
          command: fmt
          args: --check
  build:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: build 
          args: --workspace --features runtime-benchmarks --exclude fuzzing

  unit_tests:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --features runtime-benchmarks --exclude fuzzing
        env:
          RUSTFLAGS: "-C instrument-coverage"
          LLVM_PROFILE_FILE: "profile-%p-%m.profraw"
          SKIP_WASM_BUILD: true
  

  e2e_tests:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Run E2E SubXt tests
        run: |
          cargo build --features "runtime-benchmarks try-runtime" -p data-avail
          cargo run --features "runtime-benchmarks try-runtime" -p data-avail -- --dev --tmp &
          cargo run --manifest-path avail-subxt/Cargo.toml --example accounts_from_mnemonics.rs
          cargo run --manifest-path avail-subxt/Cargo.toml --example headers
          cargo run --manifest-path avail-subxt/Cargo.toml --example max_block_submit 
          cargo run --manifest-path avail-subxt/Cargo.toml --example max_block_submit 
          cargo run --manifest-path avail-subxt/Cargo.toml --example submit_data
          cargo run --manifest-path avail-subxt/Cargo.toml --example submit_data_and_dispatch_data_root

  post:
    runs-on: ubuntu-latest
    needs: [unit_tests, e2e_tests]
    steps:
      - name: Generate test code coverage report
        run: |
          cargo +stable install --force grcov
          grcov . -s . --binary-path ./target/debug/ -t lcov --branch --ignore-not-existing -o lcov.info

      - name: Upload test code coverage report to codecov.io
        uses: codecov/codecov-action@v2
        with:
          files: lcov.info

      - name: Cleanup
        run: find . -name \*.profraw -type f -exec rm -f {} +
