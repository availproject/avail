name: Avail CI
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
env:
  BUILD_TOOLCHAIN: stable-2023-08-24
  CARGO_SCCACHE_COMMIT: bed5571c
  SCCACHE_DIR: /home/runner/.cache/cargo-sccache-bed5571c
  SCCACHE_BIN: /home/runner/.cache/cargo-sccache-bed5571c/bin/sccache
  BENCH_SCCACHE_DIR: /home/ubuntu/actions-runner/_work/.cache/cargo-sccache-bed5571c
  BENCH_SCCACHE_BIN: /home/ubuntu/actions-runner/_work/.cache/cargo-sccache-bed5571c/bin/sccache


jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install rust ${{ env.BUILD_TOOLCHAIN }}
        uses: actions-rs/toolchain@v1
        with:
          # NOTE: Until https://github.com/actions-rs/toolchain/pull/209 is merged,
          # this should be synced with rust-toolchain.toml file.
          # After merge, this section should be removed.
          # toolchain: stable-2023-08-24
          toolchain: ${{ env.BUILD_TOOLCHAIN }}
          components: rustfmt
          profile: minimal

      - name: Check Avail code formatting
        uses: actions-rs/cargo@v1
        with:
          toolchain: ${{ env.BUILD_TOOLCHAIN }}
          command: fmt
          args: --check

      - name: Check Avail-SubXt code formatting
        uses: actions-rs/cargo@v1
        with:
          toolchain: ${{ env.BUILD_TOOLCHAIN }}
          command: fmt
          args: --manifest-path avail-subxt/Cargo.toml --check

      - name: Install zepter
        run: |
          cargo install zepter --locked --version 0.11.0 -q -f --no-default-features && zepter --version

      - name: Check Avail toml formatting
        run: |
          zepter format features --check

      - name: Check Avail-SubXt toml formatting
        run: |
          zepter format features --manifest-path avail-subxt/Cargo.toml --check

  build:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v2

      - name: Rust & SCCache
        uses: ./.github/Workflows/sccache.yml
        with:
          sccache_id: "build"

      - name: Build node
        run: cargo build --release -p data-avail

      - name: Upload data-avail binary
        uses: actions/upload-artifact@v2
        with:
          name: data-avail
          path: target/release/data-avail

      - name: Display SCCache Stats
        run: sccache --show-stats

      - name: Check other features
        run: cargo check --release --workspace --features "runtime-benchmarks try-runtime" -p data-avail

  benchmarks_iai:
    runs-on: [self-hosted, reference]
    needs: [lint]
    steps:
      - uses: actions/checkout@v2

      - name: Rust & SCCache
        uses: ./.github/Workflows/sccache.yml
        with:
          sccache_id: "biai"

      - name: Run Header Generation Benchmarks on IAI
        env:
          RUST_BACKTRACE: full
          SKIP_WASM_BUILD: true
        run: |
          valgrind --version
          cargo bench -p da-runtime --bench header_kate_commitment_iai | tee ~/.cache/iai/header_gen_bench_iai.txt
          find ./runtime/target/iai -type f

      - name: Header Generation Regression Checks on IAI
        uses: fmiguelgarcia/github-action-benchmark@v1
        with:
          # What benchmark tool the output.txt came from
          tool: 'rustIai'
          # Where the output from the benchmark tool is stored
          output-file-path: ~/.cache/iai/header_gen_bench_iai.txt
          # Where the previous data file is stored
          external-data-json-path: ~/.cache/iai/benchmark-data-iai.json
          save-data-file: true
          # Workflow will fail when an alert happens at 15% degradation
          fail-on-alert: true
          alert-threshold: '115%'
          # Upload the updated cache file for the next job by actions/cache
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Enable alert commit comment
          comment-on-alert: true
          # Mention @rhysd in the commit comment
          alert-comment-cc-users: '@prabal-banerjee,@jakubcech,@vthunder,@kroos47,@Leouarz,@markopoloparadox'
          comment-always: true
          summary-always: true

  benchmarks_cri:
    runs-on: [self-hosted, reference]
    needs: [lint]
    steps:
      - uses: actions/checkout@v2

      - name: Rust & SCCache
        uses: ./.github/Workflows/sccache.yml
        with:
          sccache_id: "bcri"

      - name: Run Header Generation Benchmarks on Criterion 
        env:
          SKIP_WASM_BUILD: true
        run: cargo bench -p da-runtime --bench header_kate_commitment_cri -- --color never --noplot --output-format bencher | tee ~/.cache/cri/header_gen_bench_cri.txt

      - name: Header Generation Regression Checks on Criterion 
        uses: fmiguelgarcia/github-action-benchmark@v1
        with:
          # What benchmark tool the output.txt came from
          tool: 'cargo'
          # Where the output from the benchmark tool is stored
          output-file-path: ~/.cache/cri/header_gen_bench_cri.txt
          # Where the previous data file is stored
          external-data-json-path: ~/.cache/cri/benchmark-data-cri.json
          save-data-file: true
          # Workflow will fail when an alert happens at 15% degradation
          fail-on-alert: true
          alert-threshold: '115%'
          # Upload the updated cache file for the next job by actions/cache
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Enable alert commit comment
          comment-on-alert: true
          # Mention @rhysd in the commit comment
          alert-comment-cc-users: '@prabal-banerjee,@jakubcech,@vthunder,@kroos47,@Leouarz,@markopoloparadox'
          comment-always: true
          summary-always: true

      - name: Display SCCache Stats
        run: sccache --show-stats


  unit_tests:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true

      - name: Rust & SCCache
        uses: ./.github/Workflows/sccache.yml
        with:
          sccache_id: "ut"

      - name: Run tests
        run: |
          env
          cargo test --release --workspace
          cargo test --release --manifest-path avail-subxt/Cargo.toml
        env:
          RUSTFLAGS: "-C instrument-coverage"
          LLVM_PROFILE_FILE: "profile-%p-%m.profraw"
          SKIP_WASM_BUILD: true

      - name: Display SCCache Stats
        run: sccache --show-stats

      - name: Generate test code coverage report
        run: |
          df -h
          cargo +stable install --force grcov
          grcov . -s . --binary-path ./target/release/ -t lcov --branch --ignore-not-existing -o lcov.info

      - name: Upload test code coverage report to codecov.io
        uses: codecov/codecov-action@v2
        with:
          files: lcov.info

      - name: Cleanup
        run: find . -name \*.profraw -type f -exec rm -f {} +

  e2e_tests:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2

      - name: Rust & SCCache
        uses: ./.github/Workflows/sccache.yml
        with:
          sccache_id: "build"

      - uses: actions/download-artifact@v2
        with:
          name: data-avail

      - name: Run E2E SubXt tests
        run: |
          chmod uog+x data-avail
          ./data-avail --dev --tmp &
          sleep 5
          cargo run --release --manifest-path avail-subxt/Cargo.toml --example accounts_from_mnemonics
          cargo run --release  --manifest-path avail-subxt/Cargo.toml --example da_bridge_actor 
          cargo run --release  --manifest-path avail-subxt/Cargo.toml --example headers
          cargo run --release  --manifest-path avail-subxt/Cargo.toml --example max_block_submit
          cargo run --release  --manifest-path avail-subxt/Cargo.toml --example submit_data
          cargo run --release  --manifest-path avail-subxt/Cargo.toml --example submit_data_and_dispatch_data_root
          cargo run --release  --manifest-path avail-subxt/Cargo.toml --example submit_block_length_proposal
          # Democracy calls are executable only with fast runtime (with democracy InstantAllowed set to true)
          # cargo run --release  --manifest-path avail-subxt/Cargo.toml --example democracy_external 
          # cargo run --release  --manifest-path avail-subxt/Cargo.toml --example submit_block_length_proposal_democracy

      - name: Display SCCache Stats
        run: sccache --show-stats
